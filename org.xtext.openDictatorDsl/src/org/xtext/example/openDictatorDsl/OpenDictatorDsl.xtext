// automatically generated by Xtext
grammar org.xtext.example.openDictatorDsl.OpenDictatorDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/openDictator" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Policy returns Policy:
	
	'Id' id=EString
	'FailureMessage' FailureMessage=EString
	'SuccessMessage' SuccessMessage=EString
	'FileLocation' inputfile=InputFile
	'Policy' '{'statementset=StatementSet'}';




StatementSet returns StatementSet:
	statementOperator=StatementOperator
	'['
		( statementset+=StatementSet ( "," statementset+=StatementSet)* ',')?
		statement+=Statement ( "," statement+=Statement)*
		( ',' statementset+=StatementSet ( "," statementset+=StatementSet)* )?
	']';

InputFile returns InputFile:
	fileLocation=EString;

EString returns ecore::EString:
	STRING | ID;

enum StatementOperator returns StatementOperator:
	AND = 'AND' | OR = 'OR' | NOT = 'NOT';

Statement returns Statement:
	( prefixEvaluationOperator+=EvaluationOperator )? jsonquery=JsonQuery evaluationOperator=EvaluationOperator value=Value;

enum EvaluationOperator returns EvaluationOperator:
	FORSOME = 'FORSOME' | FORALL = 'FORALL' | CONTAINS = 'CONTAINS' | EQUALS = 'EQUALS' | LARGERTHAN = 'LARGERTHAN' | SMALLERTHAN = 'SMALLERTHAN';

JsonQuery returns JsonQuery: 
	queryString=EString;

Value returns Value:
	'type=' type=EString ',' 'value=' value=EString;
