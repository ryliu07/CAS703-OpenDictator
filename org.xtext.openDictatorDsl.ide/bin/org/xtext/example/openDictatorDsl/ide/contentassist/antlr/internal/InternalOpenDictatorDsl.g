/*
 * generated by Xtext 2.34.0
 */
grammar InternalOpenDictatorDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.openDictatorDsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.openDictatorDsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.openDictatorDsl.services.OpenDictatorDslGrammarAccess;

}
@parser::members {
	private OpenDictatorDslGrammarAccess grammarAccess;

	public void setGrammarAccess(OpenDictatorDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePolicy
entryRulePolicy
:
{ before(grammarAccess.getPolicyRule()); }
	 rulePolicy
{ after(grammarAccess.getPolicyRule()); } 
	 EOF 
;

// Rule Policy
rulePolicy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolicyAccess().getGroup()); }
		(rule__Policy__Group__0)
		{ after(grammarAccess.getPolicyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementSet
entryRuleStatementSet
:
{ before(grammarAccess.getStatementSetRule()); }
	 ruleStatementSet
{ after(grammarAccess.getStatementSetRule()); } 
	 EOF 
;

// Rule StatementSet
ruleStatementSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementSetAccess().getGroup()); }
		(rule__StatementSet__Group__0)
		{ after(grammarAccess.getStatementSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputFile
entryRuleInputFile
:
{ before(grammarAccess.getInputFileRule()); }
	 ruleInputFile
{ after(grammarAccess.getInputFileRule()); } 
	 EOF 
;

// Rule InputFile
ruleInputFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputFileAccess().getFileLocationAssignment()); }
		(rule__InputFile__FileLocationAssignment)
		{ after(grammarAccess.getInputFileAccess().getFileLocationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonQuery
entryRuleJsonQuery
:
{ before(grammarAccess.getJsonQueryRule()); }
	 ruleJsonQuery
{ after(grammarAccess.getJsonQueryRule()); } 
	 EOF 
;

// Rule JsonQuery
ruleJsonQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonQueryAccess().getQueryStringAssignment()); }
		(rule__JsonQuery__QueryStringAssignment)
		{ after(grammarAccess.getJsonQueryAccess().getQueryStringAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getGroup()); }
		(rule__Value__Group__0)
		{ after(grammarAccess.getValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule StatementOperator
ruleStatementOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementOperatorAccess().getAlternatives()); }
		(rule__StatementOperator__Alternatives)
		{ after(grammarAccess.getStatementOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EvaluationOperator
ruleEvaluationOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getAlternatives()); }
		(rule__EvaluationOperator__Alternatives)
		{ after(grammarAccess.getEvaluationOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementOperatorAccess().getANDEnumLiteralDeclaration_0()); }
		('AND')
		{ after(grammarAccess.getStatementOperatorAccess().getANDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementOperatorAccess().getOREnumLiteralDeclaration_1()); }
		('OR')
		{ after(grammarAccess.getStatementOperatorAccess().getOREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementOperatorAccess().getNOTEnumLiteralDeclaration_2()); }
		('NOT')
		{ after(grammarAccess.getStatementOperatorAccess().getNOTEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getFORSOMEEnumLiteralDeclaration_0()); }
		('FORSOME')
		{ after(grammarAccess.getEvaluationOperatorAccess().getFORSOMEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getFORALLEnumLiteralDeclaration_1()); }
		('FORALL')
		{ after(grammarAccess.getEvaluationOperatorAccess().getFORALLEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getCONTAINSEnumLiteralDeclaration_2()); }
		('CONTAINS')
		{ after(grammarAccess.getEvaluationOperatorAccess().getCONTAINSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getEQUALSEnumLiteralDeclaration_3()); }
		('EQUALS')
		{ after(grammarAccess.getEvaluationOperatorAccess().getEQUALSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getLARGERTHANEnumLiteralDeclaration_4()); }
		('LARGERTHAN')
		{ after(grammarAccess.getEvaluationOperatorAccess().getLARGERTHANEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationOperatorAccess().getSMALLERTHANEnumLiteralDeclaration_5()); }
		('SMALLERTHAN')
		{ after(grammarAccess.getEvaluationOperatorAccess().getSMALLERTHANEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__0__Impl
	rule__Policy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getIdKeyword_0()); }
	'Id'
	{ after(grammarAccess.getPolicyAccess().getIdKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__1__Impl
	rule__Policy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getIdAssignment_1()); }
	(rule__Policy__IdAssignment_1)
	{ after(grammarAccess.getPolicyAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__2__Impl
	rule__Policy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getFailureMessageKeyword_2()); }
	'FailureMessage'
	{ after(grammarAccess.getPolicyAccess().getFailureMessageKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__3__Impl
	rule__Policy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getFailureMessageAssignment_3()); }
	(rule__Policy__FailureMessageAssignment_3)
	{ after(grammarAccess.getPolicyAccess().getFailureMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__4__Impl
	rule__Policy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getSuccessMessageKeyword_4()); }
	'SuccessMessage'
	{ after(grammarAccess.getPolicyAccess().getSuccessMessageKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__5__Impl
	rule__Policy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getSuccessMessageAssignment_5()); }
	(rule__Policy__SuccessMessageAssignment_5)
	{ after(grammarAccess.getPolicyAccess().getSuccessMessageAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__6__Impl
	rule__Policy__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getFileLocationKeyword_6()); }
	'FileLocation'
	{ after(grammarAccess.getPolicyAccess().getFileLocationKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__7__Impl
	rule__Policy__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getInputfileAssignment_7()); }
	(rule__Policy__InputfileAssignment_7)
	{ after(grammarAccess.getPolicyAccess().getInputfileAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__8__Impl
	rule__Policy__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getPolicyKeyword_8()); }
	'Policy'
	{ after(grammarAccess.getPolicyAccess().getPolicyKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__9__Impl
	rule__Policy__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_9()); }
	'{'
	{ after(grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__10__Impl
	rule__Policy__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getStatementsetAssignment_10()); }
	(rule__Policy__StatementsetAssignment_10)
	{ after(grammarAccess.getPolicyAccess().getStatementsetAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__0__Impl
	rule__StatementSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementOperatorAssignment_0()); }
	(rule__StatementSet__StatementOperatorAssignment_0)
	{ after(grammarAccess.getStatementSetAccess().getStatementOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__1__Impl
	rule__StatementSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getStatementSetAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__2__Impl
	rule__StatementSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getGroup_2()); }
	(rule__StatementSet__Group_2__0)?
	{ after(grammarAccess.getStatementSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__3__Impl
	rule__StatementSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementAssignment_3()); }
	(rule__StatementSet__StatementAssignment_3)
	{ after(grammarAccess.getStatementSetAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__4__Impl
	rule__StatementSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getGroup_4()); }
	(rule__StatementSet__Group_4__0)*
	{ after(grammarAccess.getStatementSetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__5__Impl
	rule__StatementSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getGroup_5()); }
	(rule__StatementSet__Group_5__0)?
	{ after(grammarAccess.getStatementSetAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getStatementSetAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_2__0__Impl
	rule__StatementSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementsetAssignment_2_0()); }
	(rule__StatementSet__StatementsetAssignment_2_0)
	{ after(grammarAccess.getStatementSetAccess().getStatementsetAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_2__1__Impl
	rule__StatementSet__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getGroup_2_1()); }
	(rule__StatementSet__Group_2_1__0)*
	{ after(grammarAccess.getStatementSetAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getStatementSetAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSet__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_2_1__0__Impl
	rule__StatementSet__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getStatementSetAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementsetAssignment_2_1_1()); }
	(rule__StatementSet__StatementsetAssignment_2_1_1)
	{ after(grammarAccess.getStatementSetAccess().getStatementsetAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSet__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_4__0__Impl
	rule__StatementSet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getStatementSetAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementAssignment_4_1()); }
	(rule__StatementSet__StatementAssignment_4_1)
	{ after(grammarAccess.getStatementSetAccess().getStatementAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSet__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_5__0__Impl
	rule__StatementSet__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getStatementSetAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_5__1__Impl
	rule__StatementSet__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementsetAssignment_5_1()); }
	(rule__StatementSet__StatementsetAssignment_5_1)
	{ after(grammarAccess.getStatementSetAccess().getStatementsetAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getGroup_5_2()); }
	(rule__StatementSet__Group_5_2__0)*
	{ after(grammarAccess.getStatementSetAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSet__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_5_2__0__Impl
	rule__StatementSet__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getCommaKeyword_5_2_0()); }
	','
	{ after(grammarAccess.getStatementSetAccess().getCommaKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSet__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSetAccess().getStatementsetAssignment_5_2_1()); }
	(rule__StatementSet__StatementsetAssignment_5_2_1)
	{ after(grammarAccess.getStatementSetAccess().getStatementsetAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getPrefixEvaluationOperatorAssignment_0()); }
	(rule__Statement__PrefixEvaluationOperatorAssignment_0)?
	{ after(grammarAccess.getStatementAccess().getPrefixEvaluationOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getJsonqueryAssignment_1()); }
	(rule__Statement__JsonqueryAssignment_1)
	{ after(grammarAccess.getStatementAccess().getJsonqueryAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__2__Impl
	rule__Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEvaluationOperatorAssignment_2()); }
	(rule__Statement__EvaluationOperatorAssignment_2)
	{ after(grammarAccess.getStatementAccess().getEvaluationOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getValueAssignment_3()); }
	(rule__Statement__ValueAssignment_3)
	{ after(grammarAccess.getStatementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getTypeKeyword_0()); }
	'type='
	{ after(grammarAccess.getValueAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__1__Impl
	rule__Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getTypeAssignment_1()); }
	(rule__Value__TypeAssignment_1)
	{ after(grammarAccess.getValueAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__2__Impl
	rule__Value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getValueAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__3__Impl
	rule__Value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueKeyword_3()); }
	'value='
	{ after(grammarAccess.getValueAccess().getValueKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAssignment_4()); }
	(rule__Value__ValueAssignment_4)
	{ after(grammarAccess.getValueAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getIdEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getPolicyAccess().getIdEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__FailureMessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getFailureMessageEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getPolicyAccess().getFailureMessageEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__SuccessMessageAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getSuccessMessageEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getPolicyAccess().getSuccessMessageEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__InputfileAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getInputfileInputFileParserRuleCall_7_0()); }
		ruleInputFile
		{ after(grammarAccess.getPolicyAccess().getInputfileInputFileParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__StatementsetAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getStatementsetStatementSetParserRuleCall_10_0()); }
		ruleStatementSet
		{ after(grammarAccess.getPolicyAccess().getStatementsetStatementSetParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementOperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementOperatorStatementOperatorEnumRuleCall_0_0()); }
		ruleStatementOperator
		{ after(grammarAccess.getStatementSetAccess().getStatementOperatorStatementOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementsetAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_2_0_0()); }
		ruleStatementSet
		{ after(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementsetAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_2_1_1_0()); }
		ruleStatementSet
		{ after(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementSetAccess().getStatementStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementStatementParserRuleCall_4_1_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementSetAccess().getStatementStatementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementsetAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_5_1_0()); }
		ruleStatementSet
		{ after(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSet__StatementsetAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_5_2_1_0()); }
		ruleStatementSet
		{ after(grammarAccess.getStatementSetAccess().getStatementsetStatementSetParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputFile__FileLocationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputFileAccess().getFileLocationEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getInputFileAccess().getFileLocationEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__PrefixEvaluationOperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getPrefixEvaluationOperatorEvaluationOperatorEnumRuleCall_0_0()); }
		ruleEvaluationOperator
		{ after(grammarAccess.getStatementAccess().getPrefixEvaluationOperatorEvaluationOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__JsonqueryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getJsonqueryJsonQueryParserRuleCall_1_0()); }
		ruleJsonQuery
		{ after(grammarAccess.getStatementAccess().getJsonqueryJsonQueryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__EvaluationOperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEvaluationOperatorEvaluationOperatorEnumRuleCall_2_0()); }
		ruleEvaluationOperator
		{ after(grammarAccess.getStatementAccess().getEvaluationOperatorEvaluationOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getValueValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getStatementAccess().getValueValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonQuery__QueryStringAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonQueryAccess().getQueryStringEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getJsonQueryAccess().getQueryStringEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getTypeEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getValueAccess().getTypeEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValueEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getValueAccess().getValueEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
